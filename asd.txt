void delete_Contact(char *id,char * path){
	struct USER u;
	FILE *f;
	int a=search_in_contact(id,path);
	if(a==0)
	printf("Kisi listenizde bulunamadi");
	else{
	char * fname;
  fname = merge_strings(id,".txt");
  f=fopen(fname,"w");
  struct USER users[50];
  int i=0;
  while(!feof(f)){
  fread(&users[i],sizeof(struct USER),1,f);
  i++;
  }
  int n=i;
  struct USER tmp;
  for(int j=0;j<i;j++){
  if(!strncmp(users[i].u_id,path,sizeof(path))){
  tmp=users[n];
  users[n]=users[j];
  users[j]=tmp;
  }
  }
  for(i=0;i<n;i++){
  fwrite(&users[i],sizeof(struct USER),1,f);
  }
  printf("Kisi listenizden silindi");
	}
}

void list_messages(char * id){
  sturuct Msg m;
  FILE *f;
  char * fname;
  char * status;
  fname=merge_strings(id,"gidenmessages.txt");
  f=fopen(fname,"r");
  while(!feof){
  fread(&m,sizeof(Msg),1,f);
  if(m.read_receipt=='0')
  status="Okunmadi";
  else
  status="Okundu"; 
  printf("%s - %s - %s",m.alan_id,m.mesaj,status);
  }
  fclose(f);
}

void change_message_status(char * id,char * path){
  struct Msg m,mesajlar[100];
  FILE *f;
  char * fname;
  int i=0,j;
  fname=merge_strings(id,"gelenmessages.txt");
  f=fopen(fname,"r");
  while(!feof){
  fread(&mesajlar[i],sizeof(Msg),1,f);
  i++;
  }
  fclose(f);
  f=fopen(fname,"w");
  for(j=0;j<i;j++){
    if(!strncmp(mesajlar[j].gonderen_id,path,sizeof(path))&&mesajlar[j].read_receipt=='0'){
      mesajlar[j].read_receipt='1';
      fwrite(&mesajlar.[j],sizeof(Msg),1,f);
    }
      fwrite(&mesajlar.[j],sizeof(Msg),1,f);
  }
  fclose(f);

  i=0;
  fname=merge_strings(path,"gidenmessages.txt");
  f=fopen(fname,"r");
  while(!feof){
  fread(&mesajlar[i],sizeof(Msg),1,f);
  i++;
  }
  fclose(f);
  f=fopen(fname,"w");
  for(j=0;j<i;j++){
    if(!strncmp(mesajlar[j].alan_id,id,sizeof(id))&&mesajlar[j].read_receipt=='0'){
      mesajlar[j].read_receipt='1';
      fwrite(&mesajlar.[j],sizeof(Msg),1,f);
    }
      fwrite(&mesajlar.[j],sizeof(Msg),1,f);
  }
  fclose(f);



}

void check_Messages(char * id){
  struct Msg m;
  File *f;
  char * fname;
  int secim;
  printf("1.Gelen Mesajlar\n2.Giden Mesajlar:\nLutfen seciminizi yapin: ");
  scanf("%d",&secim);
  if(secim==1){
    printf("1.Okunmamis Mesajlar\n2.Tum Mesajlar:\nLutfen seciminizi yapin: ");
    scanf("%d",&altsecim);
    if(altsecim==1){
      fname=merge_strings(id,"gelenmessages.txt");
      f=fopen(fname,"r");
      fread(&m,sizeof(Msg),1,f);
      while(!feof){
        if(m.read_receipt=='0')
          printf("%s - %s",m.gonderen_id,m.mesaj);
          fread(&m,sizeof(Msg),1,f);
          char * path=m.gonderen_id;
          change_message_status(id,path);
      }
    }

    if(altsecim==2){
      while(!feof){
      if(m.read_receipt=='0')
      printf("%s - %s",m.gonderen_id,m.mesaj);
      fread(&m,sizeof(Msg),1,f);
      char * path=m.gonderen_id;
      change_message_status(id,path);
      }
    }
    
  
  }
  
  if(secim==2){
   list_messages(id);
  }

}




























void search_ID(char* id){
  FILE *f;
  struct USER u;
  int a=0;
  f=fopen("users.txt","a+");
  fread(&u,sizeof(struct USER),1,f);
  while(!feof(f) && a==0){
    if(!strncmp(id,u.u_id,sizeof(id)))
      a=1;
    fread(&u,sizeof(struct USER),1,f);
  }
  if(a==0){
    printf("Kullanici bilgilerini giriniz:");
    scanf("%s %s",u.name,u.p_num);
    sprintf(u.u_id,"%s",id);
    fwrite(&u,sizeof(struct USER),1,f);
    fclose(f);
    a=0;
    char * fname;
  
    fname = merge_strings(id,".txt");
  
    f=fopen(fname,"a+");
  }
  fclose(f);
}











      void receive_message(int client_socket){
        struct Msg m,sm;
        File *f;
        char * fname;
        recv(client_socket,&m.gonderen_id,sizeof(m.gonderen_id),0);
        recv(client_socket,&m.alan_id,sizeof(m.alan_id),0);
        recv(client_socket,&m.gonderen_read receipt,sizeof(m.read_receipt),0);
        recv(client_socket,&m.mesaj,sizeof(m.mesaj),0);
        fname = merge_strings(m.gonderen_id,"-");
        fname = merge_strings(fname,m.alan_id);
        fname = merge_strings(fname,".txt");
        f=fopen(fname,"a+");
        fwrite(&m,sizeof(struct Msg),1,f);
      }


void send_Message(char * id,int network_socket){
  struct Msg m;
  m.read_receipt="0";
  m.gonderen_id=id;
  printf("Mesaji iletmek istediginiz kisinin id-sini ve mesajinizi giriniz:" );
  scanf("%s",m.alan_id);
  scanf("%s",m.mesaj);

  send(network_socket,&m.gonderen_id,sizeof(m.gonderen_id),0);
  send(network_socket,&m.alan_id,sizeof(m.alan_id),0);
  send(network_socket,&m.gonderen_read receipt,sizeof(m.read_receipt),0);
  send(network_socket,&m.mesaj,sizeof(m.mesaj),0);
}